name: Build and CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  setup-and-run:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the original repository
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        working-directory: .github/workflows

      - name: Run tests
        run: npm test
        working-directory: .github/workflows

      - name: List files in the current directory
        run: ls -al

      # Cleanup step to ensure new-gh-skeleton directory does not exist
      - name: Cleanup any existing new-gh-skeleton directory
        run: |
          if [ -d "new-gh-skeleton" ]; then
            echo "Removing existing 'new-gh-skeleton' directory..."
            rm -rf new-gh-skeleton
          fi

      # Create a new GitHub repository for new-gh-skeleton
      - name: Create a New Repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_REPO_NAME="new-gh-skeleton"
          RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               -d "{\"name\":\"$NEW_REPO_NAME\"}" \
               https://api.github.com/user/repos)
          echo "$RESPONSE"
          REPO_URL=$(echo "$RESPONSE" | grep -oP '"clone_url": "\K[^"]+')
          if [ -z "$REPO_URL" ]; then
            echo "Failed to create repository. Exiting..."
            exit 1
          fi
          echo "New repository created: $REPO_URL"
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV

      # Configure Git user identity
      - name: Configure Git User
        run: |
          git config --global user.name "lwersiy"
          git config --global user.email "petitwerso2003@gmail.com"

      # Clone the new repository and switch to it
      - name: Clone the New Remote Repository
        run: |
          echo "Cloning ${{ env.REPO_URL }}..."
          git clone "${{ env.REPO_URL }}"
          cd new-gh-skeleton

      # Run the bump_version.sh script to clone, clean, and push the skeleton repo
      - name: Run bump_version.sh Script
        run: |
          chmod +x bump_version.sh
          ./bump_version.sh https://github.com/lwersiy/gh-skeleton.git ${{ env.REPO_URL }}

      # Verify the changes have been applied and tagged
      - name: Push to new repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd new-gh-skeleton
          
          # Ensure the develop branch exists, and create it if necessary
          git checkout -b develop || git checkout develop
          
          # Add and commit files, handling empty commit cases
          git add .
          git commit -m "Initial commit with version 0.0.1" || echo "Nothing to commit"
          
          # Push the develop branch and the tags
          git push -u origin develop || echo "Failed to push develop branch"
          git push --tags
