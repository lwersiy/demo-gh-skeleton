name: Auto Clone, Modify, and Push

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'The existing repository to clone from'
        required: true
        default: 'gh-skeleton'
      new_repo_name:
        description: 'The new repository to create and push changes to (must be unique)'
        required: true

jobs:
  clone-modify-push:
    runs-on: ubuntu-latest

    steps:
      - name: Set up GitHub CLI
        run: |
          sudo apt-get install gh

      - name: Authenticate with GitHub using PAT
        run: |
          echo "${{ secrets.MY_PAT }}" | gh auth login --with-token

      # Step 1: Clone the existing repository (input from workflow_dispatch)
      - name: Clone the existing repository
        run: |
          echo "Cloning the existing repository..."
          gh repo clone "lwersiy/${{ github.event.inputs.source_repo }}" my-local-repo
        working-directory: ./  # Working in the root folder or as required

      # Step 2: Create a new GitHub repository using the dynamic name
      - name: Create a new repository
        run: |
          NEW_REPO_NAME="${{ github.event.inputs.new_repo_name }}"
          echo "Creating new repository: $NEW_REPO_NAME"
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.MY_PAT }}" \
               -H "Accept: application/vnd.github.v3+json" \
               -d "{\"name\":\"$NEW_REPO_NAME\"}" \
               https://api.github.com/user/repos)
          echo "$RESPONSE"
          REPO_URL=$(echo "$RESPONSE" | grep -oP '"clone_url": "\K[^"]+')
          if [ -z "$REPO_URL" ]; then
            echo "Failed to create repository. Exiting..."
            exit 1
          fi
          echo "New repository created: $REPO_URL"
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}

      # Step 3: Modify the repository using bump_version.sh
      - name: Run bump_version.sh to modify repository
        run: |
          chmod +x my-local-repo/bump_version.sh
          ./my-local-repo/bump_version.sh https://github.com/lwersiy/${{ github.event.inputs.source_repo }}.git ${{ env.REPO_URL }}

      # Step 4: Push the changes to the new repository
      - name: Push changes to new repository
        run: |
          cd my-local-repo
          git add .
          git commit -m "Initial commit with version bump"
          git push -u origin develop
        env:
          GIT_COMMITTER_NAME: GitHub Action
          GIT_COMMITTER_EMAIL: actions@github.com
